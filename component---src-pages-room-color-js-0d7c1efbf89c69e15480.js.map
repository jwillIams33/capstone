{"version":3,"sources":["webpack:///./src/components/layout/roomList.js","webpack:///./src/components/layout/pageContent.js","webpack:///./src/pages/room_color.js","webpack:///./src/components/layout/responsiveHeader.js"],"names":["RoomList","props","color","content","rooms","map","room","className","gridTest","roomItem","style","imgGen","roomImage","flexboxGrid","linkStyles","to","state","name","copy","price","img","row","roomName","roomPrice","roomRow","PageContent","headlineAlt","title","Page","location","ResponsiveHeader","useState","isToggled","setToggle","itemsClass","items","nav","menu","logo","onClick","logo2","child"],"mappings":"yLAiCeA,EA3BE,SAAAC,GACf,IAAMC,EAAQD,EAAMC,MAEdC,EAAUF,EAAMG,MAAMC,KAAI,SAAAC,GAAI,OAClC,yBAAKC,UAAWC,IAASC,UACvB,yBAAKC,MAAOC,YAAOL,EAAKJ,IAASK,UAAWC,IAASI,WACnD,kBAAC,IAAD,CAAML,UAAWM,IAAYC,WAAYC,GAAE,eAAkBC,MAAO,CAACC,KAAMX,EAAKW,KAAMC,KAAMZ,EAAKY,KAAMC,MAAOb,EAAKa,MAAOC,IAAKd,EAAKJ,KACjII,EAAKW,OAGV,yBAAKV,UAAWC,IAASa,KACvB,uBAAGd,UAAWC,IAASc,UAAWhB,EAAKW,MACvC,uBAAGV,UAAWC,IAASe,WACpBjB,EAAKa,MACN,8CAMR,OACE,oCACE,yBAAKZ,UAAWC,IAASgB,SAAUrB,K,SCL1BsB,EAhBI,SAAAxB,GAEf,IAAMC,EAAQD,EAAMC,MAEtB,OACE,oCACA,8BACE,kBAAC,IAAD,MACA,wBAAIK,UAAWC,IAASkB,aAAcC,IAAMzB,IAC5C,2BAAIgB,IAAKhB,IACT,kBAAC,EAAD,CAAUE,MAAOA,IAAMF,GAAQA,MAAOA,OCV7B0B,UAJF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OAAO,kBAAC,EAAD,CAAa3B,MAAO2B,EAASb,MAAMd,U,iCCJ5C,sCA2Ce4B,IAxCU,SAAA7B,GAAU,IAAD,EACD8B,oBAAS,GAAjCC,EADyB,KACdC,EADc,KAG5BC,EAAa1B,IAAS2B,MACtBC,EAAM5B,IAAS4B,IACfC,EAAO,OAQX,OALIL,IACFI,GAAO,aACPC,EAAO,SAIP,oCACE,gCACE,yBAAK9B,UAAWC,IAASa,KACvB,wBAAId,UAAWC,IAAS8B,MAAxB,QACA,4BACEC,QAAS,kBAAMN,GAAWD,IAC1BzB,UAAWC,IAAS6B,MAEnBA,IAIL,yBAAK9B,UAAW2B,GACd,wBAAI3B,UAAWC,IAASgC,OAAxB,QACA,wBAAIjC,UAAW6B,GACb,wBAAI7B,UAAWC,IAASiC,OAAxB,SACA,wBAAIlC,UAAWC,IAASiC,OAAxB,QACA,wBAAIlC,UAAWC,IAASiC,OAAxB,YACA,wBAAIlC,UAAWC,IAASiC,OAAxB","file":"component---src-pages-room-color-js-0d7c1efbf89c69e15480.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport gridTest from \"../../pages/newgrid.module.css\"\nimport flexboxGrid from \"../flexboxGrid.module.css\"\nimport imgGen from \"../../helpers/imgGen\"\n\nconst RoomList = props => {\n  const color = props.color\n\n  const content = props.rooms.map(room => (\n    <div className={gridTest.roomItem}>\n      <div style={imgGen(room[color])} className={gridTest.roomImage}>\n        <Link className={flexboxGrid.linkStyles} to={`/room_detail`} state={{name: room.name, copy: room.copy, price: room.price, img: room[color]}}>\n          {room.name}\n        </Link>\n      </div>\n      <div className={gridTest.row}>\n        <p className={gridTest.roomName}>{room.name}</p>\n        <p className={gridTest.roomPrice}>\n          {room.price}\n          <span>/night</span>\n        </p>\n      </div>\n    </div>\n  ))\n\n  return (\n    <>\n      <div className={gridTest.roomRow}>{content}</div>\n    </>\n  )\n}\n\nexport default RoomList\n","import React from \"react\"\nimport gridTest from \"../../pages/newgrid.module.css\"\nimport ResponsiveHeader from \"./responsiveHeader\"\nimport RoomList from \"./roomList\"\nimport { rooms, copy, title } from \"../../data/content\"\n\n\nconst PageContent= props => {\n    \n    const color = props.color\n    \n  return (\n    <>\n    <main>\n      <ResponsiveHeader />\n      <h1 className={gridTest.headlineAlt}>{title[color]}</h1>\n      <p>{copy[color]}</p>\n      <RoomList rooms={rooms[color]} color={color} />\n    </main>\n  </>\n  )\n}\n\nexport default PageContent","import React from \"react\"\nimport PageContent from \"../components/layout/pageContent\"\n\nconst Page = ({ location }) => {\n  return <PageContent color={location.state.color} />\n}\n\nexport default Page\n","import React, { useState } from \"react\"\nimport gridTest from \"../../pages/newgrid.module.css\"\n\nconst ResponsiveHeader = props => {\n  const [isToggled, setToggle] = useState(false)\n\n  let itemsClass = gridTest.items\n  let nav = gridTest.nav\n  let menu = \"Menu\"\n\n\n  if (isToggled) {\n    nav += \"is-toggled\"\n    menu = \"Close\"\n  }\n\n  return (\n    <>\n      <header>\n        <div className={gridTest.row}>\n          <h2 className={gridTest.logo}>Logo</h2>\n          <button\n            onClick={() => setToggle(!isToggled)}\n            className={gridTest.menu}\n          >\n            {menu}\n          </button>\n        </div>\n\n        <div className={itemsClass}>\n          <h2 className={gridTest.logo2}>Logo</h2>\n          <ul className={nav}>\n            <li className={gridTest.child}>Rooms</li>\n            <li className={gridTest.child}>Bars</li>\n            <li className={gridTest.child}>Meetings</li>\n            <li className={gridTest.child}>AAH! Tonight</li>\n          </ul>\n        </div>\n      </header>\n    </>\n  )\n}\n\nexport default ResponsiveHeader\n"],"sourceRoot":""}